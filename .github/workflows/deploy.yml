name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build Slidev projects
        run: |
          # ワークスペースルートの絶対パスを取得
          WORKSPACE_ROOT="$GITHUB_WORKSPACE"
          
          # 一時ディレクトリを作成してスライドを保存
          mkdir -p "$WORKSPACE_ROOT/tmp/slides"
          
          for dir in apps/*/; do
            if [ -f "$dir/slides.md" ] && [[ ! "$dir" == *"_"* ]]; then
              echo "Building $dir"
              cd "$dir"
              pnpm install
              pnpm exec slidev build
              pnpm exec slidev export --output slides.pdf
              
              # 一時ディレクトリにコピー
              dirname=$(basename "$dir")
              mkdir -p "$WORKSPACE_ROOT/tmp/slides/$dirname"
              cp -r dist/* "$WORKSPACE_ROOT/tmp/slides/$dirname/"
              cp slides.pdf "$WORKSPACE_ROOT/tmp/slides/$dirname/"
              cd "$WORKSPACE_ROOT"
            fi
          done

      - name: Build Astro site
        run: |
          cd apps/astro-site
          pnpm build

      - name: Copy slides to Astro dist
        run: |
          # ワークスペースルートの絶対パスを取得
          WORKSPACE_ROOT="$GITHUB_WORKSPACE"
          
          # スライド用ディレクトリを作成
          mkdir -p "$WORKSPACE_ROOT/apps/astro-site/dist/slides"
          
          # 一時保存したスライドをAstro distディレクトリにコピー
          echo "Copying slides to dist/slides directory..."
          echo "Content of tmp/slides directory:"
          ls -la "$WORKSPACE_ROOT/tmp/slides"
          
          cp -rv "$WORKSPACE_ROOT/tmp/slides/"* "$WORKSPACE_ROOT/apps/astro-site/dist/slides/"

      - name: Check File Tree
        run: |
          WORKSPACE_ROOT="$GITHUB_WORKSPACE"
          
          echo "=== Temporary Directory Content ==="
          ls -laR "$WORKSPACE_ROOT/tmp/slides"
          
          echo -e "\n=== Final File Tree ==="
          find "$WORKSPACE_ROOT/apps/astro-site/dist" -type f | sed "s|$WORKSPACE_ROOT/apps/astro-site/dist/||"
          
          echo -e "\n=== Directory Structure with Sizes ==="
          du -ah "$WORKSPACE_ROOT/apps/astro-site/dist"
          
          echo -e "\n=== Slides Directory Content ==="
          ls -laR "$WORKSPACE_ROOT/apps/astro-site/dist/slides"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/astro-site/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
